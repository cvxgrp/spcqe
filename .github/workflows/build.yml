name: Deploy Main
on:
  release:
    types: [published]
jobs:
  deploy-pypi:
    runs-on: ubuntu-latest
    environment: deployment
    permissions:
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Twine and Build
        run: sudo pip install twine build

      - name: Create the distribution
        run: |
          git fetch --prune --unshallow --tags
          sudo python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-conda:
    runs-on: ubuntu-latest
    # sets default shell to remove need for source to run the conda shell
    defaults:
      run:
        shell: bash -l {0}
    environment: deployment
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Much better than manual installation, original version Miniconda2-4.7.10-Linux-x86_64.sh is broken
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
          miniconda-version: "latest"

      - name: Install the Conda Dependencies
        run: |
          conda config --set always_yes yes --set auto_update_conda false
          conda update conda
          conda install -n base conda-libmamba-solver
          conda install python=3.10 conda-build colorama pip ruamel ruamel.yaml rich jsonschema -c conda-forge
          git fetch --prune --unshallow --tags
          pip install -e .

      - name: Build the Anaconda Package
        id: condabuild
        run: |
          conda install anaconda-client
          conda config --set anaconda_upload no --set solver libmamba
          echo yes | anaconda login --username ${{ secrets.ANACONDA_CLOUD_USERNAME }} --password ${{ secrets.ANACONDA_CLOUD_PASSWORD }}
          VERSION_FROM_GIT_TAG=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-) conda build . -c conda-forge
          echo "gitversion=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-)" >> $GITHUB_OUTPUT

      - name: Upload the Anaconda Package
        id: condaload
        run: |
          anaconda upload -u stanfordcvxgrp  /usr/share/miniconda3/conda-bld/noarch/spcqe-${{ steps.condabuild.outputs.gitversion }}-*.tar.bz2